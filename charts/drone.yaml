version: '3'
silent: true
tasks:
  install:
    cmds:
      - kubectl config set-context --current --namespace=drone
      - helm uninstall drone
      - kubectl create namespace drone
      - task: generate:server
      - task: install:server
      - task: generate:runner
      - task: install:runner
      - kubectl wait --for=condition=available --timeout=600s deployment/powerdrone -n drone
      - task: bridge
    ignore_error: true

  install:runner:
    dirs: charts/drone
    cmds:
      - kubectl apply -k ./charts/drone
  install:server:
    dirs: charts/drone
    cmds:
      - helm install --namespace drone drone drone/drone -f charts/drone/server.yaml --wait
  generate:runner:
    dirs: charts/drone
    cmds:
      - |
        cat << EOF > charts/drone/deploy-runner.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: drone-runner
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: drone-runner
          template:
            metadata:
              labels:
                app: drone-runner
            spec:
              serviceAccountName: drone-runner
              containers:
              - name: runner
                image: drone/drone-runner-kube:latest
                ports:
                - containerPort: 3000
                env:
                - name: DRONE_RPC_HOST
                  value: host.k3d.internal:3000
                - name: DRONE_RPC_PROTO
                  value: http
                - name: DRONE_RPC_SECRET
                  value: {{.DRONE_RPC_SECRET}}
                - name: DRONE_RPC_SKIP_VERIFY
                  value: "true"
                - name: DRONE_NAMESPACE_DEFAULT
                  value: "drone"
                - name: DRONE_RESOURCE_LIMIT_MEMORY
                  value: "3000MiB"
                - name: DRONE_RESOURCE_LIMIT_CPU
                  value: "4000"
                - name: DRONE_RESOURCE_REQUEST_CPU
                  value: "2000"
        EOF

  generate:server:
    dirs: charts/drone
    cmds:
      - |
        cat << EOF > charts/drone/server.yaml
        image:
          repository: drone/drone
          tag: 2.9.1
          pullPolicy: IfNotPresent
        nameOverride: "powerdrone"
        fullnameOverride: "powerdrone"
        env:
          DRONE_SERVER_HOST: {{.DRONE_URI}}
          DRONE_SERVER_PROTO: https
          DRONE_RPC_SECRET: {{.DRONE_RPC_SECRET}}
          DRONE_GITHUB_CLIENT_ID: {{.DRONE_CLIENT_ID}}
          DRONE_GITHUB_CLIENT_SECRET: {{.DRONE_CLIENT_SECRET}}
          DRONE_GITHUB_ORG: {{.DRONE_USER_FILTER}}
          DRONE_USER_CREATE: {{.DRONE_USER_CREATE}}
        EOF

  bridge:
    env:
      DRONE_POD:
        sh: echo $(kubectl get pods --namespace drone -l "app.kubernetes.io/name=powerdrone,app.kubernetes.io/instance=drone" -o jsonpath="{.items[0].metadata.name}")
    cmds:
        -  kubectl --namespace drone port-forward $DRONE_POD 3000:80